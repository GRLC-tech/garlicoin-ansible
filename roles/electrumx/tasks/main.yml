---
 
  - name: Install aptitude using apt
    apt: name=aptitude state=latest update_cache=yes force_apt_get=yes

  - name: Install prerequisites
    apt:
      update_cache: yes
      name:
        - ca-certificates
        - curl
        - gnupg
        - lsb-release
        - apt-transport-https
        - software-properties-common
        - python3-pip
        - virtualenv
        - python3-setuptools
      state: present

  - name: Install Docker Module for Python
    pip:
      name: docker

  - name: Copy Dockerfile
    copy:
      src: files/Dockerfile
      dest: /var/apps/electrumx-node/  
  
  # Transfer Files
  - name: Copy File to Host
    template:
      src: "{{ role_path }}/{{ item }}"
      dest: "{{ app_path }}/"
      mode: '0755'
    with_items:
      - "files/DockerFile"
      - "files/docker-compose.yml"

 # Docker Compose
   - name: Docker Compose Build
     shell:
       cmd: "docker-compose -f docker-compose.yml build"
       chdir: "{{ app_path }}"

   - name: Docker Compose Up
     shell:
       cmd: "docker-compose -f docker-compose.yml up -d"
       chdir: "{{ app_path }}"  

   - name: Transfer Certs
     cert:
       src: "{{ role_path }}/certs/{{ item }}
       dest: /data/
       mode: '0644'
     with items:
       - "privekey.pem"
       - "fullchain.pem"

   - name: Pull ElectrumX image
     docker_image:
       name: "{{ electrumx_image }}"
       source: pull
       
  # Docker Compose
  - name: Docker Compose Build
    shell:
      cmd: "docker-compose -f docker-compose.yml build"
      chdir: "{{ app_path }}"

  - name: Docker Compose Up
    shell:
      cmd: "docker-compose -f docker-compose.yml up -d"
      chdir: "{{ app_path }}"

       - electrumx_data:/data
       ports:
       - "50002:50002"
       env:
         COIN: garlicoin
         DAEMON_URL: "http://{{ rpc_username }}:{{ rpc_password }}@garlicoin:42068"
         RPC_HOST: "127.0.0.1"
         RPC_PORT: "8000"

   - name: Add Firewall Rules for ElectrumX Node
     ufw:
       rule: allow
       port: 50002
       from_ip: "0.0.0.0/0"
       proto: tcp
       route: yes
     when: firewall_enabled == true

   - name: Reload Firewall
     ufw:
       state: reloaded
      when: firewall_enabled == true
