---
 
    - name: Install aptitude using apt
      apt: name=aptitude state=latest update_cache=yes force_apt_get=yes

    - name: Install prerequisites
      apt:
        update_cache: yes
        name:
          - ca-certificates
          - curl
          - gnupg
          - lsb-release
          - apt-transport-https
          - software-properties-common
          - python3-pip
          - virtualenv
          - python3-setuptools
        state: present

    - name: Install Docker Module for Python
      pip:
        name: docker

  # Directory Structure
    - name: Create Directories
      file:
        path: "{{ item }}"
        state: directory
        owner: ubuntu
        group: ubuntu
      with_items:
        - "{{ application_path }}/electrumx-node"

  # Transfer Files
    - name: Copy Docker Files
      copy:
        src: "{{ role_path }}/{{ item }}"
        dest: "{{ application_path }}/electrumx-node/"
        mode: '0755'
      with_items:
        - "files/DockerFile"
        - "files/docker-compose.yml"
        - "files/coins.py"
        
    - name: Copy Startup.sh
      template:
        src: "{{ role_path }}/templates/{{ item }}"
        dest: "{{ application_path }}/electrumx-node/"
        mode: '0755'
      with_items:
        - "startup.sh"

    - name: Transfer Certs
      copy:
        src: "{{ role_path }}/certs/{{ item }}"
        dest: /data/electrumx/
        mode: '0644'
      with_items:
        - "{{ private_key_filename }}"
        - "{{ public_cert_filename }}"
    
    - name: Copy Banner
      copy:
        src: "{{ role_path }}/files/banner.txt"
        dest: /data/electrumx
        mode: 655

 # Docker Compose
   
    - name: Docker Compose Build
      shell:
        cmd: "docker-compose -f docker-compose.yml build"
        chdir: "{{ application_path }}/electrumx-node"

    - name: Docker Compose Up      
      shell:
        cmd: "docker-compose -f docker-compose.yml up -d"
        chdir: "{{ application_path }}/electrumx-node"  

  # Docker Compose
    - name: Add Firewall Rules for ElectrumX Node
      ufw:
        rule: allow
        port: 50002
        from_ip: "0.0.0.0/0"
        proto: tcp
        route: yes
      when: firewall_enabled == true

    - name: Reload Firewall
      ufw:
        state: reloaded
      when: firewall_enabled == true
